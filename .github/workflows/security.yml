name: Security-checks

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

jobs:
  unittests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: '12'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Prepare environment
        run:  |
          npm install
      - name: Run tests
        shell: bash
        run: |
          npm run test
      - name: Run mainnet tests
        shell: bash
        run: |
          npm install -g ganache-cli@6.12.2
          brownie test ./tests-mainnet/Strategy --network mainnet-fork
          brownie test ./tests-mainnet/rewards --network mainnet-fork
          brownie test ./tests-mainnet/zap --network mainnet-fork
        env:
          ETHERSCAN_TOKEN: ${{ secrets.ETHERSCAN_TOKEN }}
          WEB3_INFURA_PROJECT_ID: ${{ secrets.WEB3_INFURA_PROJECT_ID }}
          PROXY_OWNER: "0xc5af91f7d10dde118992ecf536ed227f276ec60d"
          VAULTSAVINGV2_PROXY: "0x6511d8686eb43eac9d4852458435c1bec4d67bc6"
          VAULTSAVINGV2: "0x1fb043a4fc9aeec7415c804dd3347800456cfac9"
          CURVEREG: "0x8AEE0a8A05A319BfCa41fF2E95C48f3F86383211"


  slither:
    runs-on: ubuntu-latest
    name: Solidity Security
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: '12'
      - uses: actions/setup-python@v2
        with:
         python-version: '3.8'
      - name: Prepare environment
        run: |
         npm install -g ganache-cli@6.12.1
         pip3 install solc-select
         solc-select install 0.6.12
         solc-select use 0.6.12
         pip3 install slither-analyzer
         pip install -r requirements-dev.txt
      - name: Prepare contracts
        shell: bash
        run: |
          npm run clone-packages
          npm run sec:flatten
      - name: Slither Static Analysis
        uses: luisfontes19/slither-static-analysis-action@v0.3.2
        with:
          slither-version: '0.6.13'
          run-npm-install: true
          high-threshold: 0
          medium-threshold: 20
          low-threshold: 30
          optimization-threshold: 5
          informative-threshold: 50
          projectPath: "./flattened"

  echidna:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: '12'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Prepare environment
        run:  |
          pip3 install slither-analyzer
          npm install
          npm run sec:load-echidna
      - name: Prepare contracts
        shell: bash
        run: |
          npm run sec:flatten-echidna
      - name: Run echidna
        shell: bash
        run: |
          export PATH=.:$PATH
          npm run sec:echidna >echidna_report.txt 2>&1 || true
      - name: Store the report
        uses: actions/upload-artifact@v2
        with:
          name: echidna-report
          path: ./echidna_report.txt
      - name: Check the report
        shell: bash
        run: |
          sh ./security/echidna/echidna-check-report.sh
