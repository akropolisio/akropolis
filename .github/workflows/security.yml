name: Security-checks

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

jobs:
  unittests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: '12'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Prepare environment
        run:  |
          npm install
      - name: Run tests
        shell: bash
        run: |
          npm run test
      - name: Run mainnet-test
        shell: bash
        run:
          npm run strategies_test
        env:
          DEPLOYER_PRIVATE_KEY: 1
          ADMIN_PRIVATE_KEY: 1
          PROXY_ADMIN_ADDRESS: "0xc18D591151eb8Db2c82CCA119651a70BCE98600e"
          WEB3_INFURA_PROJECT_ID: "eac78836a0944b96a8008eb250c106bb"
          ALCHEMY_ARCHIVE_NODE: 1
          ETHERSCAN_TOKEN: "E2FCXKH78YMBY7ZNNVZ8IZW31KB76ZU1VJ"
          VAULTSAVINGV2_PROXY: "0x6511d8686eb43eac9d4852458435c1bec4d67bc6"
          VAULTSAVINGV2: "0x1fb043a4fc9aeec7415c804dd3347800456cfac9"
          TRYCRYPTO: "0x3D980E50508CFd41a13837A60149927a11c03731"
          GOVERNANCE: "0xfeb4acf3df3cdea7399794d0869ef76a6efaff52"
          LPTOKEN: "0xca3d75ac011bf5ad07a98d02f18225f9bd9a6bdf"
          LPTOKEN_OWNER: "0xba12222222228d8ba445958a75a0704d566bf2c8"
          REWARDS: "0x93a62da5a14c80f265dabc077fcee437b1a0efde"
          VOTER_PROXY: "0x4ce03bCFC3122eB0F724b94913629c6062949947"
          STRATEGIST: "0x710295b5f326c2e47E6dD2E7F6b5b0F7c5AC2F24"
          TRYCRYPTO_PROXY: "0x671a912C10bba0CFA74Cfc2d6Fba9BA1ed9530B2"

  slither:
    runs-on: ubuntu-latest
    name: Solidity Security
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: '12'
      - uses: actions/setup-python@v2
        with:
         python-version: '3.8'
      - name: Prepare environment
        run: |
         npm install -g ganache-cli@6.12.1
         pip3 install solc-select
         solc-select install 0.6.12
         solc-select use 0.6.12
         pip3 install slither-analyzer
         pip install -r requirements-dev.txt
      - name: Prepare contracts
        shell: bash
        run: |
          npm run clone-packages
          npm run sec:flatten
      - name: Slither Static Analysis
        uses: luisfontes19/slither-static-analysis-action@v0.3.2
        with:
          slither-version: '0.6.13'
          run-npm-install: true
          high-threshold: 0
          medium-threshold: 20
          low-threshold: 30
          optimization-threshold: 5
          informative-threshold: 50
          projectPath: "./flattened"

  echidna:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: '12'
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Prepare environment
        run:  |
          pip3 install slither-analyzer
          npm install
          npm run sec:load-echidna
      - name: Prepare contracts
        shell: bash
        run: |
          npm run sec:flatten-echidna
      - name: Run echidna
        shell: bash
        run: |
          export PATH=.:$PATH
          npm run sec:echidna >echidna_report.txt 2>&1 || true
      - name: Store the report
        uses: actions/upload-artifact@v2
        with:
          name: echidna-report
          path: ./echidna_report.txt
      - name: Check the report
        shell: bash
        run: |
          sh ./security/echidna/echidna-check-report.sh
