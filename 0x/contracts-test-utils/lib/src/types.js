"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExchangeFunctionName = exports.ContractName = exports.OrderStatus = void 0;
var types_1 = require("@0x/types");
Object.defineProperty(exports, "OrderStatus", { enumerable: true, get: function () { return types_1.OrderStatus; } });
var ContractName;
(function (ContractName) {
    ContractName["TokenRegistry"] = "TokenRegistry";
    ContractName["MultiSigWalletWithTimeLock"] = "MultiSigWalletWithTimeLock";
    ContractName["Exchange"] = "Exchange";
    ContractName["DummyERC20Token"] = "DummyERC20Token";
    ContractName["EtherToken"] = "WETH9";
    ContractName["DutchAuction"] = "DutchAuction";
    ContractName["ZeroExGovernor"] = "ZeroExGovernor";
    ContractName["AccountLevels"] = "AccountLevels";
    ContractName["EtherDelta"] = "EtherDelta";
    ContractName["Arbitrage"] = "Arbitrage";
    ContractName["TestAssetDataDecoders"] = "TestAssetDataDecoders";
    ContractName["TestAssetProxyDispatcher"] = "TestAssetProxyDispatcher";
    ContractName["TestLibs"] = "TestLibs";
    ContractName["TestSignatureValidator"] = "TestSignatureValidator";
    ContractName["ERC20Proxy"] = "ERC20Proxy";
    ContractName["ERC721Proxy"] = "ERC721Proxy";
    ContractName["DummyERC721Receiver"] = "DummyERC721Receiver";
    ContractName["DummyERC721Token"] = "DummyERC721Token";
    ContractName["TestLibBytes"] = "TestLibBytes";
    ContractName["TestWallet"] = "TestWallet";
    ContractName["Authorizable"] = "Authorizable";
    ContractName["Whitelist"] = "Whitelist";
    ContractName["Forwarder"] = "Forwarder";
    ContractName["BalanceThresholdFilter"] = "BalanceThresholdFilter";
})(ContractName = exports.ContractName || (exports.ContractName = {}));
var ExchangeFunctionName;
(function (ExchangeFunctionName) {
    ExchangeFunctionName["BatchCancelOrders"] = "batchCancelOrders";
    ExchangeFunctionName["BatchExecuteTransactions"] = "batchExecuteTransactions";
    ExchangeFunctionName["BatchFillOrKillOrders"] = "batchFillOrKillOrders";
    ExchangeFunctionName["BatchFillOrders"] = "batchFillOrders";
    ExchangeFunctionName["BatchFillOrdersNoThrow"] = "batchFillOrdersNoThrow";
    ExchangeFunctionName["BatchMatchOrders"] = "batchMatchOrders";
    ExchangeFunctionName["BatchMatchOrdersWithMaximalFill"] = "batchMatchOrdersWithMaximalFill";
    ExchangeFunctionName["CancelOrder"] = "cancelOrder";
    ExchangeFunctionName["CancelOrdersUpTo"] = "cancelOrdersUpTo";
    ExchangeFunctionName["ExecuteTransaction"] = "executeTransaction";
    ExchangeFunctionName["FillOrKillOrder"] = "fillOrKillOrder";
    ExchangeFunctionName["FillOrder"] = "fillOrder";
    ExchangeFunctionName["FillOrderNoThrow"] = "fillOrderNoThrow";
    ExchangeFunctionName["MarketBuyOrdersNoThrow"] = "marketBuyOrdersNoThrow";
    ExchangeFunctionName["MarketSellOrdersNoThrow"] = "marketSellOrdersNoThrow";
    ExchangeFunctionName["MarketBuyOrdersFillOrKill"] = "marketBuyOrdersFillOrKill";
    ExchangeFunctionName["MarketSellOrdersFillOrKill"] = "marketSellOrdersFillOrKill";
    ExchangeFunctionName["MatchOrders"] = "matchOrders";
    ExchangeFunctionName["MatchOrdersWithMaximalFill"] = "matchOrdersWithMaximalFill";
    ExchangeFunctionName["PreSign"] = "preSign";
    ExchangeFunctionName["RegisterAssetProxy"] = "registerAssetProxy";
    ExchangeFunctionName["SetSignatureValidatorApproval"] = "setSignatureValidatorApproval";
    ExchangeFunctionName["SimulateDispatchTransferFromCalls"] = "simulateDispatchTransferFromCalls";
    ExchangeFunctionName["TransferOwnership"] = "transferOwnership";
    ExchangeFunctionName["SetProtocolFeeMultiplier"] = "setProtocolFeeMultiplier";
    ExchangeFunctionName["SetProtocolFeeCollectorAddress"] = "setProtocolFeeCollectorAddress";
    ExchangeFunctionName["DetachProtocolFeeCollector"] = "detachProtocolFeeCollector";
})(ExchangeFunctionName = exports.ExchangeFunctionName || (exports.ExchangeFunctionName = {}));
//# sourceMappingURL=types.js.map