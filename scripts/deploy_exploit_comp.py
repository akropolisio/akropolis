import os
from dotenv import load_dotenv, find_dotenv
from brownie import *

# VestedAkro, ExploitCompVAkroSwap, accounts, network, web3

from utils.deploy_helpers import (
    deploy_proxy,
    deploy_admin,
    get_proxy_admin,
    upgrade_proxy,
    deploy_proxy_over_impl,
)


def main():
    # load_dotenv(dotenv_path=Path('..')/".env", override=True)

    load_dotenv(find_dotenv())

    print(f"You are using the '{network.show_active()}' network")

    akro_token = "0x8ab7404063ec4dbcfd4598215992dc3f8ec853d7"
    vesting_period = 63072000
    vesting_start = 1626307200
    vesting_cliff = 0
    minter_akro = "0x5780837C1d9AC3CD9b72203c8A0CFAC73a9FC0b8"
    merkle_roots = [
        0xF89170B9672AC024FA8135192365AC0DFE38E3C6E93D7A170693D9E784C7E403,
        0x9CE3559FE67390FE81718BA953549F6C8B0DE53B78574FEF33B7BCBD78EF0EC4,
        0x5A6F89637F81B9ADE3CCD7CFC013ACD1FBD645110F59E4CFF22921D0BA583E1A,
    ]

    if (
        network.show_active() == "mainnet"
        or network.show_active() == "development"
        or network.show_active() == "rinkeby"
    ):
        if network.show_active() == "mainnet":
            deployer = accounts.add(os.getenv("DEPLOYER_PRIVATE_KEY"))
            print(f"You are using: 'deployer' [{deployer.address}]")
        elif network.show_active() == "development":
            deployer = accounts[0]
            print(f"You are using: 'deployer' [{deployer.address}]")
        elif network.show_active() == "rinkeby":
            deployer = accounts.add(os.getenv("DEPLOYER_PRIVATE_KEY"))
            print(f"You are using: 'deployer' [{deployer.address}]")
            akro_token = "0xad7541B1E795656851caD5c70aA8d495063D9a95"
            minter_akro = "0x5D507818B52A891fe296463adC01EeD9C51e218b"
        # Deploy vAkro
        vakro = VestedAkro.deploy({"from": deployer})
        print(f"vAkro deployed at {vakro.address}")

        vakro.initialize(akro_token, vesting_period, {"from": deployer})
        print(
            f"vAkro initialized with akro_token and vesting_period {akro_token, vesting_period}"
        )

        vakro.setVestingStart(vesting_start, {"from": deployer})
        print(f"vAkro vesting start set {vesting_start}")

        vakro.setVestingCliff(vesting_cliff, {"from": deployer})
        print(f"vAkro vesting cliff set {vesting_cliff}")

        vakro.addMinter(minter_akro, {"from": deployer})
        # Deploy Exploit Comp contract
        exploitCompVAkro = ExploitCompVAkroSwap.deploy({"from": deployer})
        print(f"Exploit comp deployed at {exploitCompVAkro.address}")

        exploitCompVAkro.initialize(vakro.address, {"from": deployer})
        print(f"Exploit comp initialised with vakro address {vakro.address}")

        exploitCompVAkro.setMerkleRoots(merkle_roots, {"from": deployer})
        print(f"Exploit comp merkle roots set {merkle_roots}")
        print("====Merkle roots====")
        print(
            exploitCompVAkro.merkleRoots(0),
            exploitCompVAkro.merkleRoots(1),
            exploitCompVAkro.merkleRoots(2),
        )

        vakro.addMinter(exploitCompVAkro.address, {"from": deployer})
        print(f"Exploit comp minter added {exploitCompVAkro.address}")

        vakro.addSender(exploitCompVAkro.address, {"from": deployer})
        print(f"Exploit comp sender added {exploitCompVAkro.address}")

        if network.show_active() == "mainnet" or network.show_active() == "rinkeby":
            VestedAkro.publish_source(vakro)
            ExploitCompVAkroSwap.publish_source(exploitCompVAkro)
